{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1GgFZ7NCUVTed5RIKvMolDjS_gZJGlzLU","authorship_tag":"ABX9TyNsPBwPxKBhYIOOP7ccXf8r"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"SVChMc9C7I-9"},"outputs":[],"source":[]},{"cell_type":"code","source":[],"metadata":{"id":"pt4M7RHjJapB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import pandas as pd\n","\n","df = pd.read_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC THÀNH 3/Full_Mark_2020.csv\")\n","\n","df.columns = ['No', 'Code', 'Diali', 'GDCD', 'Hoahoc', 'KHTN', 'KHXH', 'LichSu', 'Ngoaingu', 'Nguvan', 'Sinhhoc', 'Toan', 'Vatli', 'city']\n","\n","df.info()\n","\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":823},"id":"OGuzpS3j8D2S","executionInfo":{"status":"ok","timestamp":1700017502844,"user_tz":-420,"elapsed":6289,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"66694755-4531-4d3d-b07f-79bf06b78c58"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-1-179a0468bc39>:3: DtypeWarning: Columns (1,12,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC THÀNH 3/Full_Mark_2020.csv\")\n"]},{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1051860 entries, 0 to 1051859\n","Data columns (total 14 columns):\n"," #   Column    Non-Null Count    Dtype  \n","---  ------    --------------    -----  \n"," 0   No        1051860 non-null  int64  \n"," 1   Code      1051860 non-null  object \n"," 2   Diali     677017 non-null   float64\n"," 3   GDCD      583615 non-null   float64\n"," 4   Hoahoc    351098 non-null   float64\n"," 5   KHTN      340016 non-null   float64\n"," 6   KHXH      583173 non-null   float64\n"," 7   LichSu    692753 non-null   float64\n"," 8   Ngoaingu  927333 non-null   float64\n"," 9   Nguvan    1034987 non-null  float64\n"," 10  Sinhhoc   344830 non-null   float64\n"," 11  Toan      1047277 non-null  float64\n"," 12  Vatli     348615 non-null   object \n"," 13  city      1051860 non-null  object \n","dtypes: float64(10), int64(1), object(3)\n","memory usage: 112.4+ MB\n"]},{"output_type":"execute_result","data":{"text/plain":["              No      Code  Diali  GDCD  Hoahoc  KHTN  KHXH  LichSu  Ngoaingu  \\\n","0              0  44000001    NaN   NaN    8.00  7.08   NaN     NaN       4.4   \n","1              1  44000002    NaN   NaN    8.25  7.17   NaN     NaN       NaN   \n","2              2  44000003    NaN   NaN    4.50  4.92   NaN     NaN       4.0   \n","3              3  44000004   7.50  9.25     NaN   NaN  8.67    9.25       7.4   \n","4              4  44000005   8.00  9.00     NaN   NaN  8.50    8.50       9.2   \n","...          ...       ...    ...   ...     ...   ...   ...     ...       ...   \n","1051855  1051855  13007414   5.25  4.25     NaN   NaN  4.08    2.75       2.8   \n","1051856  1051856  13007415   5.25  6.25     NaN   NaN  5.83    6.00       3.8   \n","1051857  1051857  13007416   5.75  8.50     NaN   NaN  6.67    5.75       3.4   \n","1051858  1051858  13007417   7.25  6.75     NaN   NaN  6.25    4.75       2.2   \n","1051859  1051859  13007418   3.75  4.00     NaN   NaN  3.83    3.75       4.0   \n","\n","         Nguvan  Sinhhoc  Toan Vatli city  \n","0          7.50     5.50   8.4  7.75   44  \n","1          6.00     6.25   7.6   7.0   44  \n","2          5.00     5.75   7.0   4.5   44  \n","3          6.75      NaN   7.2   NaN   44  \n","4          7.00      NaN   7.6   NaN   44  \n","...         ...      ...   ...   ...  ...  \n","1051855    4.00      NaN   3.6   NaN   13  \n","1051856    5.50      NaN   4.6   NaN   13  \n","1051857    5.00      NaN   5.4   NaN   13  \n","1051858    4.50      NaN   5.2   NaN   13  \n","1051859    4.00      NaN   6.2   NaN   13  \n","\n","[1051860 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-02062c20-b697-415e-a51e-94f46412f9e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No</th>\n","      <th>Code</th>\n","      <th>Diali</th>\n","      <th>GDCD</th>\n","      <th>Hoahoc</th>\n","      <th>KHTN</th>\n","      <th>KHXH</th>\n","      <th>LichSu</th>\n","      <th>Ngoaingu</th>\n","      <th>Nguvan</th>\n","      <th>Sinhhoc</th>\n","      <th>Toan</th>\n","      <th>Vatli</th>\n","      <th>city</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>44000001</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.00</td>\n","      <td>7.08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.4</td>\n","      <td>7.50</td>\n","      <td>5.50</td>\n","      <td>8.4</td>\n","      <td>7.75</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>44000002</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.25</td>\n","      <td>7.17</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.00</td>\n","      <td>6.25</td>\n","      <td>7.6</td>\n","      <td>7.0</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>44000003</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.50</td>\n","      <td>4.92</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>5.00</td>\n","      <td>5.75</td>\n","      <td>7.0</td>\n","      <td>4.5</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>44000004</td>\n","      <td>7.50</td>\n","      <td>9.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.67</td>\n","      <td>9.25</td>\n","      <td>7.4</td>\n","      <td>6.75</td>\n","      <td>NaN</td>\n","      <td>7.2</td>\n","      <td>NaN</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>44000005</td>\n","      <td>8.00</td>\n","      <td>9.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.50</td>\n","      <td>8.50</td>\n","      <td>9.2</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>7.6</td>\n","      <td>NaN</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1051855</th>\n","      <td>1051855</td>\n","      <td>13007414</td>\n","      <td>5.25</td>\n","      <td>4.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.08</td>\n","      <td>2.75</td>\n","      <td>2.8</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>3.6</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1051856</th>\n","      <td>1051856</td>\n","      <td>13007415</td>\n","      <td>5.25</td>\n","      <td>6.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.83</td>\n","      <td>6.00</td>\n","      <td>3.8</td>\n","      <td>5.50</td>\n","      <td>NaN</td>\n","      <td>4.6</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1051857</th>\n","      <td>1051857</td>\n","      <td>13007416</td>\n","      <td>5.75</td>\n","      <td>8.50</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.67</td>\n","      <td>5.75</td>\n","      <td>3.4</td>\n","      <td>5.00</td>\n","      <td>NaN</td>\n","      <td>5.4</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1051858</th>\n","      <td>1051858</td>\n","      <td>13007417</td>\n","      <td>7.25</td>\n","      <td>6.75</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.25</td>\n","      <td>4.75</td>\n","      <td>2.2</td>\n","      <td>4.50</td>\n","      <td>NaN</td>\n","      <td>5.2</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>1051859</th>\n","      <td>1051859</td>\n","      <td>13007418</td>\n","      <td>3.75</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.83</td>\n","      <td>3.75</td>\n","      <td>4.0</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>6.2</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1051860 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02062c20-b697-415e-a51e-94f46412f9e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-02062c20-b697-415e-a51e-94f46412f9e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-02062c20-b697-415e-a51e-94f46412f9e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ad2dfbbe-efee-4d2f-9150-e0dee5f91c81\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ad2dfbbe-efee-4d2f-9150-e0dee5f91c81')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ad2dfbbe-efee-4d2f-9150-e0dee5f91c81 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","source":["df[\"Code\"] = pd.to_numeric(df['Code'], errors='coerce')\n","df[\"Vatli\"] = pd.to_numeric(df['Vatli'],errors='coerce')\n","df[\"city\"] = pd.to_numeric(df['city'],errors='coerce')\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F8ZaOWs58Ls6","executionInfo":{"status":"ok","timestamp":1700017938819,"user_tz":-420,"elapsed":3,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"79324142-9d45-4e4f-8f52-1cadf8f0b388"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1051860 entries, 0 to 1051859\n","Data columns (total 14 columns):\n"," #   Column    Non-Null Count    Dtype  \n","---  ------    --------------    -----  \n"," 0   No        1051860 non-null  int64  \n"," 1   Code      1051854 non-null  float64\n"," 2   Diali     677017 non-null   float64\n"," 3   GDCD      583615 non-null   float64\n"," 4   Hoahoc    351098 non-null   float64\n"," 5   KHTN      340016 non-null   float64\n"," 6   KHXH      583173 non-null   float64\n"," 7   LichSu    692753 non-null   float64\n"," 8   Ngoaingu  927333 non-null   float64\n"," 9   Nguvan    1034987 non-null  float64\n"," 10  Sinhhoc   344830 non-null   float64\n"," 11  Toan      1047277 non-null  float64\n"," 12  Vatli     348613 non-null   float64\n"," 13  city      1051854 non-null  float64\n","dtypes: float64(13), int64(1)\n","memory usage: 112.4 MB\n"]}]},{"cell_type":"code","source":["#Kiểm tra dữ liệu trùng lặp\n","duplicate_rows = df[df.duplicated(subset=\"Code\")]\n","print (\"Số dòng dữ liệu trùng lặp: \" , len(duplicate_rows))\n","\n","#Xóa dữ liệu trùng lặp\n","df.drop_duplicates (subset='Code')\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"8zqH3fmQ-Cdo","executionInfo":{"status":"ok","timestamp":1700018356002,"user_tz":-420,"elapsed":507,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"e6176260-068b-43d5-ff29-254699037a21"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Số dòng dữ liệu trùng lặp:  190904\n"]},{"output_type":"execute_result","data":{"text/plain":["              No        Code  Diali  GDCD  Hoahoc  KHTN  KHXH  LichSu  \\\n","0              0  44000001.0    NaN   NaN    8.00  7.08   NaN     NaN   \n","1              1  44000002.0    NaN   NaN    8.25  7.17   NaN     NaN   \n","2              2  44000003.0    NaN   NaN    4.50  4.92   NaN     NaN   \n","3              3  44000004.0   7.50  9.25     NaN   NaN  8.67    9.25   \n","4              4  44000005.0   8.00  9.00     NaN   NaN  8.50    8.50   \n","...          ...         ...    ...   ...     ...   ...   ...     ...   \n","1051855  1051855  13007414.0   5.25  4.25     NaN   NaN  4.08    2.75   \n","1051856  1051856  13007415.0   5.25  6.25     NaN   NaN  5.83    6.00   \n","1051857  1051857  13007416.0   5.75  8.50     NaN   NaN  6.67    5.75   \n","1051858  1051858  13007417.0   7.25  6.75     NaN   NaN  6.25    4.75   \n","1051859  1051859  13007418.0   3.75  4.00     NaN   NaN  3.83    3.75   \n","\n","         Ngoaingu  Nguvan  Sinhhoc  Toan  Vatli  city  \n","0             4.4    7.50     5.50   8.4   7.75  44.0  \n","1             NaN    6.00     6.25   7.6   7.00  44.0  \n","2             4.0    5.00     5.75   7.0   4.50  44.0  \n","3             7.4    6.75      NaN   7.2    NaN  44.0  \n","4             9.2    7.00      NaN   7.6    NaN  44.0  \n","...           ...     ...      ...   ...    ...   ...  \n","1051855       2.8    4.00      NaN   3.6    NaN  13.0  \n","1051856       3.8    5.50      NaN   4.6    NaN  13.0  \n","1051857       3.4    5.00      NaN   5.4    NaN  13.0  \n","1051858       2.2    4.50      NaN   5.2    NaN  13.0  \n","1051859       4.0    4.00      NaN   6.2    NaN  13.0  \n","\n","[1051860 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-6e20a69d-07e0-4b9c-8951-21fe362e9d57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No</th>\n","      <th>Code</th>\n","      <th>Diali</th>\n","      <th>GDCD</th>\n","      <th>Hoahoc</th>\n","      <th>KHTN</th>\n","      <th>KHXH</th>\n","      <th>LichSu</th>\n","      <th>Ngoaingu</th>\n","      <th>Nguvan</th>\n","      <th>Sinhhoc</th>\n","      <th>Toan</th>\n","      <th>Vatli</th>\n","      <th>city</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>44000001.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.00</td>\n","      <td>7.08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.4</td>\n","      <td>7.50</td>\n","      <td>5.50</td>\n","      <td>8.4</td>\n","      <td>7.75</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>44000002.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.25</td>\n","      <td>7.17</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.00</td>\n","      <td>6.25</td>\n","      <td>7.6</td>\n","      <td>7.00</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>44000003.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.50</td>\n","      <td>4.92</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>5.00</td>\n","      <td>5.75</td>\n","      <td>7.0</td>\n","      <td>4.50</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>44000004.0</td>\n","      <td>7.50</td>\n","      <td>9.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.67</td>\n","      <td>9.25</td>\n","      <td>7.4</td>\n","      <td>6.75</td>\n","      <td>NaN</td>\n","      <td>7.2</td>\n","      <td>NaN</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>44000005.0</td>\n","      <td>8.00</td>\n","      <td>9.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.50</td>\n","      <td>8.50</td>\n","      <td>9.2</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>7.6</td>\n","      <td>NaN</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1051855</th>\n","      <td>1051855</td>\n","      <td>13007414.0</td>\n","      <td>5.25</td>\n","      <td>4.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.08</td>\n","      <td>2.75</td>\n","      <td>2.8</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>3.6</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051856</th>\n","      <td>1051856</td>\n","      <td>13007415.0</td>\n","      <td>5.25</td>\n","      <td>6.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.83</td>\n","      <td>6.00</td>\n","      <td>3.8</td>\n","      <td>5.50</td>\n","      <td>NaN</td>\n","      <td>4.6</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051857</th>\n","      <td>1051857</td>\n","      <td>13007416.0</td>\n","      <td>5.75</td>\n","      <td>8.50</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.67</td>\n","      <td>5.75</td>\n","      <td>3.4</td>\n","      <td>5.00</td>\n","      <td>NaN</td>\n","      <td>5.4</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051858</th>\n","      <td>1051858</td>\n","      <td>13007417.0</td>\n","      <td>7.25</td>\n","      <td>6.75</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.25</td>\n","      <td>4.75</td>\n","      <td>2.2</td>\n","      <td>4.50</td>\n","      <td>NaN</td>\n","      <td>5.2</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051859</th>\n","      <td>1051859</td>\n","      <td>13007418.0</td>\n","      <td>3.75</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.83</td>\n","      <td>3.75</td>\n","      <td>4.0</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>6.2</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1051860 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e20a69d-07e0-4b9c-8951-21fe362e9d57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6e20a69d-07e0-4b9c-8951-21fe362e9d57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6e20a69d-07e0-4b9c-8951-21fe362e9d57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cbf2d558-8910-4ac3-9ac8-ae8240fc6c20\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbf2d558-8910-4ac3-9ac8-ae8240fc6c20')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cbf2d558-8910-4ac3-9ac8-ae8240fc6c20 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["#Đánh số lại SDB\n","my_df = df\n","my_df [\"Code\"] = range (1, len(df)+1)\n","my_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"i5GS2OMQ_H8I","executionInfo":{"status":"ok","timestamp":1700018484206,"user_tz":-420,"elapsed":4,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"e50910b5-9bf3-4453-d056-4499bce9da88"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              No     Code  Diali  GDCD  Hoahoc  KHTN  KHXH  LichSu  Ngoaingu  \\\n","0              0        1    NaN   NaN    8.00  7.08   NaN     NaN       4.4   \n","1              1        2    NaN   NaN    8.25  7.17   NaN     NaN       NaN   \n","2              2        3    NaN   NaN    4.50  4.92   NaN     NaN       4.0   \n","3              3        4   7.50  9.25     NaN   NaN  8.67    9.25       7.4   \n","4              4        5   8.00  9.00     NaN   NaN  8.50    8.50       9.2   \n","...          ...      ...    ...   ...     ...   ...   ...     ...       ...   \n","1051855  1051855  1051856   5.25  4.25     NaN   NaN  4.08    2.75       2.8   \n","1051856  1051856  1051857   5.25  6.25     NaN   NaN  5.83    6.00       3.8   \n","1051857  1051857  1051858   5.75  8.50     NaN   NaN  6.67    5.75       3.4   \n","1051858  1051858  1051859   7.25  6.75     NaN   NaN  6.25    4.75       2.2   \n","1051859  1051859  1051860   3.75  4.00     NaN   NaN  3.83    3.75       4.0   \n","\n","         Nguvan  Sinhhoc  Toan  Vatli  city  \n","0          7.50     5.50   8.4   7.75  44.0  \n","1          6.00     6.25   7.6   7.00  44.0  \n","2          5.00     5.75   7.0   4.50  44.0  \n","3          6.75      NaN   7.2    NaN  44.0  \n","4          7.00      NaN   7.6    NaN  44.0  \n","...         ...      ...   ...    ...   ...  \n","1051855    4.00      NaN   3.6    NaN  13.0  \n","1051856    5.50      NaN   4.6    NaN  13.0  \n","1051857    5.00      NaN   5.4    NaN  13.0  \n","1051858    4.50      NaN   5.2    NaN  13.0  \n","1051859    4.00      NaN   6.2    NaN  13.0  \n","\n","[1051860 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-8d892f47-6e24-4d2b-bd06-5b341ff0fe94\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>No</th>\n","      <th>Code</th>\n","      <th>Diali</th>\n","      <th>GDCD</th>\n","      <th>Hoahoc</th>\n","      <th>KHTN</th>\n","      <th>KHXH</th>\n","      <th>LichSu</th>\n","      <th>Ngoaingu</th>\n","      <th>Nguvan</th>\n","      <th>Sinhhoc</th>\n","      <th>Toan</th>\n","      <th>Vatli</th>\n","      <th>city</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.00</td>\n","      <td>7.08</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.4</td>\n","      <td>7.50</td>\n","      <td>5.50</td>\n","      <td>8.4</td>\n","      <td>7.75</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.25</td>\n","      <td>7.17</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.00</td>\n","      <td>6.25</td>\n","      <td>7.6</td>\n","      <td>7.00</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.50</td>\n","      <td>4.92</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>5.00</td>\n","      <td>5.75</td>\n","      <td>7.0</td>\n","      <td>4.50</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>7.50</td>\n","      <td>9.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.67</td>\n","      <td>9.25</td>\n","      <td>7.4</td>\n","      <td>6.75</td>\n","      <td>NaN</td>\n","      <td>7.2</td>\n","      <td>NaN</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>8.00</td>\n","      <td>9.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8.50</td>\n","      <td>8.50</td>\n","      <td>9.2</td>\n","      <td>7.00</td>\n","      <td>NaN</td>\n","      <td>7.6</td>\n","      <td>NaN</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1051855</th>\n","      <td>1051855</td>\n","      <td>1051856</td>\n","      <td>5.25</td>\n","      <td>4.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.08</td>\n","      <td>2.75</td>\n","      <td>2.8</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>3.6</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051856</th>\n","      <td>1051856</td>\n","      <td>1051857</td>\n","      <td>5.25</td>\n","      <td>6.25</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.83</td>\n","      <td>6.00</td>\n","      <td>3.8</td>\n","      <td>5.50</td>\n","      <td>NaN</td>\n","      <td>4.6</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051857</th>\n","      <td>1051857</td>\n","      <td>1051858</td>\n","      <td>5.75</td>\n","      <td>8.50</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.67</td>\n","      <td>5.75</td>\n","      <td>3.4</td>\n","      <td>5.00</td>\n","      <td>NaN</td>\n","      <td>5.4</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051858</th>\n","      <td>1051858</td>\n","      <td>1051859</td>\n","      <td>7.25</td>\n","      <td>6.75</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.25</td>\n","      <td>4.75</td>\n","      <td>2.2</td>\n","      <td>4.50</td>\n","      <td>NaN</td>\n","      <td>5.2</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>1051859</th>\n","      <td>1051859</td>\n","      <td>1051860</td>\n","      <td>3.75</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.83</td>\n","      <td>3.75</td>\n","      <td>4.0</td>\n","      <td>4.00</td>\n","      <td>NaN</td>\n","      <td>6.2</td>\n","      <td>NaN</td>\n","      <td>13.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1051860 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8d892f47-6e24-4d2b-bd06-5b341ff0fe94')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8d892f47-6e24-4d2b-bd06-5b341ff0fe94 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8d892f47-6e24-4d2b-bd06-5b341ff0fe94');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1a9f0a8c-5edf-480b-9b7a-5b1cbdb6645d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1a9f0a8c-5edf-480b-9b7a-5b1cbdb6645d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1a9f0a8c-5edf-480b-9b7a-5b1cbdb6645d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["#Đếm số lượng thí sinh không thi cả 2 khối KHTn và KHXH\n","count_no_exam = len(my_df[my_df[\"KHTN\"].isnull() & my_df[\"KHXH\"].isnull()])\n","#Đếm số lượng thí sinh thi cả 2 khối KHTn và KHXH\n","count_both_exam = len(my_df[my_df[\"KHTN\"].notnull() & my_df[\"KHXH\"].notnull()])\n","#In kết quả\n","print(\"Số lượng thí sinh không thi cả 2 môn: \", count_no_exam)\n","print(\"Số lượng thí sinh thi cả 2 môn: \", count_both_exam)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hAoHyKWl_8Zn","executionInfo":{"status":"ok","timestamp":1700018977781,"user_tz":-420,"elapsed":2,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"2a2779e0-42d7-428e-e7bc-92672fe25a5c"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Số lượng thí sinh không thi cả 2 môn:  128672\n","Số lượng thí sinh thi cả 2 môn:  1\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"2UGj8DHRDrce"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Lọc dữ liệu điểm thi của thí sinh tại Tp.HCM\n","df_khtn_hcm = my_df_KHTN[my_df_KHTN[\"city\"]==2]\n","df_khtn_hcm.to_csv (\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC THÀNH 3/df_khtn_hcm.csv\")\n","\n","df_khtn_hn = my_df_KHTN[my_df_KHTN[\"city\"]==1]\n","df_khtn_hn.to_csv (\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC THÀNH 3/df_khtn_hn.csv\")"],"metadata":{"id":"r-Wa9sGZCgaO","executionInfo":{"status":"ok","timestamp":1700019394941,"user_tz":-420,"elapsed":1245,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["#Tách dataframe my_df thành 2 dataframe khtn và khxh\n","my_df_KHTN = my_df[my_df[\"KHTN\"].notnull()]\n","my_df_KHXH = my_df[my_df[\"KHXH\"].notnull()]\n","\n","my_df_KHTN.info()\n","my_df_KHXH.info()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-eXdWj1YBxKP","executionInfo":{"status":"ok","timestamp":1700019162422,"user_tz":-420,"elapsed":3,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"68731ccd-932e-4107-e7c2-6c83348d3a9e"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 340016 entries, 0 to 1051740\n","Data columns (total 14 columns):\n"," #   Column    Non-Null Count   Dtype  \n","---  ------    --------------   -----  \n"," 0   No        340016 non-null  int64  \n"," 1   Code      340016 non-null  int64  \n"," 2   Diali     1 non-null       float64\n"," 3   GDCD      1 non-null       float64\n"," 4   Hoahoc    340016 non-null  float64\n"," 5   KHTN      340016 non-null  float64\n"," 6   KHXH      1 non-null       float64\n"," 7   LichSu    1 non-null       float64\n"," 8   Ngoaingu  334250 non-null  float64\n"," 9   Nguvan    337238 non-null  float64\n"," 10  Sinhhoc   340016 non-null  float64\n"," 11  Toan      340001 non-null  float64\n"," 12  Vatli     340016 non-null  float64\n"," 13  city      340013 non-null  float64\n","dtypes: float64(12), int64(2)\n","memory usage: 38.9 MB\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 583173 entries, 3 to 1051859\n","Data columns (total 14 columns):\n"," #   Column    Non-Null Count   Dtype  \n","---  ------    --------------   -----  \n"," 0   No        583173 non-null  int64  \n"," 1   Code      583173 non-null  int64  \n"," 2   Diali     583173 non-null  float64\n"," 3   GDCD      583173 non-null  float64\n"," 4   Hoahoc    1 non-null       float64\n"," 5   KHTN      1 non-null       float64\n"," 6   KHXH      583173 non-null  float64\n"," 7   LichSu    583173 non-null  float64\n"," 8   Ngoaingu  580490 non-null  float64\n"," 9   Nguvan    582949 non-null  float64\n"," 10  Sinhhoc   1 non-null       float64\n"," 11  Toan      582607 non-null  float64\n"," 12  Vatli     1 non-null       float64\n"," 13  city      583171 non-null  float64\n","dtypes: float64(12), int64(2)\n","memory usage: 66.7 MB\n"]}]},{"cell_type":"code","source":["#Lọc ra các cột cần tính toán\n","my_df_KHTN = my_df_KHTN[['Toan', 'Nguvan', 'Vatli', 'Hoahoc', 'Sinhhoc']]\n","my_df_KHTN.info()\n","\n","my_df_KHXH = my_df_KHXH[[\"Toan\", \"Nguvan\", \"Ngoaingu\", \"LichSu\", \"Diali\", \"GDCD\"]]\n","my_df_KHXH.info()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5nE8YLwADuJ0","executionInfo":{"status":"ok","timestamp":1700019721356,"user_tz":-420,"elapsed":452,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"aa7120e4-5bb7-4f95-ceff-653d241a2fa2"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 340016 entries, 0 to 1051740\n","Data columns (total 5 columns):\n"," #   Column   Non-Null Count   Dtype  \n","---  ------   --------------   -----  \n"," 0   Toan     340001 non-null  float64\n"," 1   Nguvan   337238 non-null  float64\n"," 2   Vatli    340016 non-null  float64\n"," 3   Hoahoc   340016 non-null  float64\n"," 4   Sinhhoc  340016 non-null  float64\n","dtypes: float64(5)\n","memory usage: 15.6 MB\n","<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 583173 entries, 3 to 1051859\n","Data columns (total 6 columns):\n"," #   Column    Non-Null Count   Dtype  \n","---  ------    --------------   -----  \n"," 0   Toan      582607 non-null  float64\n"," 1   Nguvan    582949 non-null  float64\n"," 2   Ngoaingu  580490 non-null  float64\n"," 3   LichSu    583173 non-null  float64\n"," 4   Diali     583173 non-null  float64\n"," 5   GDCD      583173 non-null  float64\n","dtypes: float64(6)\n","memory usage: 31.1 MB\n"]}]},{"cell_type":"code","source":["\n","import matplotlib.pyplot as plt\n","from sklearn.cluster import KMeans\n","from sklearn.metrics import silhouette_score\n","\n","# Tiền xử lý dữ liệu\n","my_df_KHXH.fillna(my_df_KHXH.mean(), inplace=True)\n","\n","# Tìm số cụm tối ưu sử dụng phương pháp Elbow\n","max_clusters = 10  # Số cụm tối đa muốn xem\n","sse = []\n","for k in range(1, max_clusters + 1):\n","    kmeans = KMeans(n_clusters=k, random_state=42)\n","    kmeans.fit(my_df_KHXH)\n","    sse.append(kmeans.inertia_)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wjUiWf_oEmsF","executionInfo":{"status":"ok","timestamp":1700020762610,"user_tz":-420,"elapsed":117344,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"8c4ae316-1920-430b-a716-ec633c1cfae9"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["\n","# Vẽ biểu đồ Elbow\n","plt.plot(range(1, max_clusters + 1), sse, marker='o')\n","plt.xlabel('Số lượng cụm')\n","plt.ylabel('SSE')\n","plt.title('Phương pháp Elbow')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":474},"id":"HYiN6NLxFIz1","executionInfo":{"status":"ok","timestamp":1700020767278,"user_tz":-420,"elapsed":360,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"abb6b4e5-4f55-4bc3-dbbc-42bdaaa6813f"},"execution_count":41,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["Quan sát biểu đồ ta thấy số cụm tối ưu có thể là 5"],"metadata":{"id":"OoRyPgENFVsL"}},{"cell_type":"code","source":["\n","# Số cụm tối ưu dựa trên biểu đồ Elbow\n","num_clusters = 5\n","\n","# Áp dụng thuật toán K-means\n","kmeans = KMeans(n_clusters=num_clusters, random_state=42)\n","kmeans.fit(my_df_KHXH)\n","\n","# Gán nhãn cụm cho dữ liệu\n","my_df_KHXH['Cluster'] = kmeans.labels_\n","\n","# Vẽ biểu đồ phân cụm\n","plt.scatter(my_df_KHXH['Cluster'], my_df_KHXH['Toan'], c=my_df_KHXH['Cluster'], cmap='viridis')\n","plt.xlabel('Cluster')\n","plt.ylabel('Toan')\n","plt.title('Phân cụm K-means')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":527},"id":"-4jNkpx_FQUT","executionInfo":{"status":"ok","timestamp":1700020815118,"user_tz":-420,"elapsed":27032,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"72448232-27a8-4035-cbf3-bd13eeda7d3a"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\n","my_df_KHXH[[\"Toan\", \"Nguvan\"]].round(2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"5SryeOlaJcgZ","executionInfo":{"status":"ok","timestamp":1700021012676,"user_tz":-420,"elapsed":6,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"0db85190-c290-46a7-9060-a3c19aacefac"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Toan  Nguvan\n","3         7.2    6.75\n","4         7.6    7.00\n","6         7.4    6.00\n","7         7.6    7.50\n","9         6.0    7.00\n","...       ...     ...\n","1051855   3.6    4.00\n","1051856   4.6    5.50\n","1051857   5.4    5.00\n","1051858   5.2    4.50\n","1051859   6.2    4.00\n","\n","[583173 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-cce8100f-d39d-4894-9255-1191267da82a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Toan</th>\n","      <th>Nguvan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>7.2</td>\n","      <td>6.75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.6</td>\n","      <td>7.00</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>7.4</td>\n","      <td>6.00</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>7.6</td>\n","      <td>7.50</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>6.0</td>\n","      <td>7.00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1051855</th>\n","      <td>3.6</td>\n","      <td>4.00</td>\n","    </tr>\n","    <tr>\n","      <th>1051856</th>\n","      <td>4.6</td>\n","      <td>5.50</td>\n","    </tr>\n","    <tr>\n","      <th>1051857</th>\n","      <td>5.4</td>\n","      <td>5.00</td>\n","    </tr>\n","    <tr>\n","      <th>1051858</th>\n","      <td>5.2</td>\n","      <td>4.50</td>\n","    </tr>\n","    <tr>\n","      <th>1051859</th>\n","      <td>6.2</td>\n","      <td>4.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>583173 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cce8100f-d39d-4894-9255-1191267da82a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cce8100f-d39d-4894-9255-1191267da82a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cce8100f-d39d-4894-9255-1191267da82a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d1eb8a9f-64de-43f2-b4a4-120fecc400ec\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d1eb8a9f-64de-43f2-b4a4-120fecc400ec')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d1eb8a9f-64de-43f2-b4a4-120fecc400ec button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["\n","import numpy as np\n","def kmeans_display(X, label):\n","    K = np.amax(label) + 1\n","    X0 = X[label == 0, :]\n","    X1 = X[label == 1, :]\n","    X2 = X[label == 2, :]\n","\n","    plt.plot(X0[:, 0], X0[:, 1], 'b^', markersize = 4, alpha = .8)\n","    plt.plot(X1[:, 0], X1[:, 1], 'go', markersize = 4, alpha = .8)\n","    plt.plot(X2[:, 0], X2[:, 1], 'rs', markersize = 4, alpha = .8)\n","\n","    plt.axis('equal')\n","    plt.plot()\n","    plt.show()"],"metadata":{"id":"FyuX-q9PJhj5","executionInfo":{"status":"ok","timestamp":1700021048075,"user_tz":-420,"elapsed":322,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["\n","# Số cụm tối ưu dựa trên biểu đồ Elbow\n","num_clusters = 5\n","\n","# Áp dụng thuật toán K-means\n","kmeans = KMeans(n_clusters=num_clusters, random_state=0).fit(my_df_KHXH[[\"Toan\", \"Nguvan\"]])\n","\n","print(\"Center found by scikit-learn:\\n\", kmeans.cluster_centers_)\n","\n","pred_label = kmeans.predict(my_df_KHXH[[\"Toan\", \"Nguvan\"]])\n","\n","kmeans_display(my_df_KHXH[[\"Toan\", \"Nguvan\"]].values, pred_label)\n","\n","my_df_KHXH.to_csv(\"diemthi.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":589},"id":"frO8mtA-JqNK","executionInfo":{"status":"ok","timestamp":1700021107953,"user_tz":-420,"elapsed":11129,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"89a7bbea-4508-4c0b-93a8-0c3515d93301"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["Center found by scikit-learn:\n"," [[6.69074353 5.77201321]\n"," [8.12368052 7.84546338]\n"," [4.699561   6.59874877]\n"," [6.53201998 7.44513244]\n"," [3.5227205  4.68011826]]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}