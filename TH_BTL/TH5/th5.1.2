{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1kOrcDH0bJzCqNlAs61jDr5OSfs80_l41","authorship_tag":"ABX9TyMXY7cVncpS8Qd0azHY1u7N"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.naive_bayes import GaussianNB\n","from sklearn.metrics import confusion_matrix, classification_report\n","\n","# Đọc dữ liệu từ tập tin CSV\n","data = pd.read_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC HÀNH 5/bank-data.csv\")\n","\n","# Xóa cột \"id\" vì không cần thiết cho việc phân loại\n","data.drop(\"id\", axis=1, inplace=True)\n","\n","# Chia dữ liệu thành features (X) và nhãn (y)\n","X = data.drop(\"pep\", axis=1)\n","y = data[\"pep\"]\n","\n","# Chuyển đổi các cột dữ liệu dạng văn bản sang dạng số hóa\n","X = pd.get_dummies(X)\n","X.to_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC HÀNH 5/demo.csv\")\n"],"metadata":{"id":"s-lN-8vNMzcY","executionInfo":{"status":"ok","timestamp":1703042134047,"user_tz":-420,"elapsed":341,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wBpHnyqzL2Fg","executionInfo":{"status":"ok","timestamp":1703042104608,"user_tz":-420,"elapsed":318,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"5b264784-7196-42d5-9565-aab2ea03aa73"},"outputs":[{"output_type":"stream","name":"stdout","text":["KNN Model Evaluation:\n","[[18 15]\n"," [12 15]]\n","              precision    recall  f1-score   support\n","\n","          NO       0.60      0.55      0.57        33\n","         YES       0.50      0.56      0.53        27\n","\n","    accuracy                           0.55        60\n","   macro avg       0.55      0.55      0.55        60\n","weighted avg       0.55      0.55      0.55        60\n","\n"]}],"source":["# a) Sử dụng KNN để phân loại\n","# Chia dữ liệu thành tập huấn luyện và tập kiểm tra (test data=train data)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)\n","\n","# Khởi tạo mô hình KNN với k=5\n","knn_model = KNeighborsClassifier(n_neighbors=3)\n","knn_model.fit(X_train, y_train)\n","\n","# Dự đoán nhãn cho tập kiểm tra\n","y_pred = knn_model.predict(X_test)\n","\n","# Đánh giá mô hình KNN\n","print(\"KNN Model Evaluation:\")\n","print(confusion_matrix(y_test, y_pred))\n","print(classification_report(y_test, y_pred))"]},{"cell_type":"code","source":["# b) Tách bộ dữ liệu thành 2 phần\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","\n","# Đọc dữ liệu từ tập tin CSV\n","data = pd.read_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC HÀNH 5/bank-data.csv\")\n","\n","# Chia dữ liệu thành features (X) và nhãn (y)\n","X = data.drop(\"pep\", axis=1)\n","y = data[\"pep\"]\n","\n","# Chia dữ liệu thành tập huấn luyện và tập kiểm tra với tỷ lệ 90% - 10% và đảm bảo tỷ lệ nhãn YES và NO\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, stratify=y, random_state=42)\n","\n","# Gộp features và nhãn lại thành một DataFrame cho mỗi tập tin\n","train_data = pd.concat([X_train, y_train], axis=1)\n","test_data = pd.concat([X_test, y_test], axis=1)\n","\n","# Lưu tập tin TrainData.csv\n","train_data.to_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC HÀNH 5/TrainData.csv\", index=False)\n","\n","# Lưu tập tin TestData.csv\n","test_data.to_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC HÀNH 5/TestData.csv\", index=False)\n","\n","print(\"Đã tách tập tin thành công! TrainData.csv và TestData.csv đã được tạo.\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5EAGdJpqOaLi","executionInfo":{"status":"ok","timestamp":1703042267867,"user_tz":-420,"elapsed":507,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"945cc38c-03b0-49c4-b490-e98633fb4054"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Đã tách tập tin thành công! TrainData.csv và TestData.csv đã được tạo.\n"]}]},{"cell_type":"code","source":["# c) Kiểm tra mô hình KNN trên tập dữ liệu mới (TestData)\n","# Đọc dữ liệu từ tập tin TrainData.csv và TestData.csv\n","train_data = pd.read_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC HÀNH 5/TrainData.csv\")\n","test_data = pd.read_csv(\"/content/drive/MyDrive/KHAI PHÁ DỮ LIỆU/THỰC HÀNH 5/TestData.csv\")\n","\n","train_data.drop(\"id\", axis=1, inplace=True)\n","test_data.drop(\"id\", axis=1, inplace=True)\n","\n","# Chia dữ liệu huấn luyện và kiểm tra thành features (X) và nhãn (y)\n","X_train = train_data.drop(\"pep\", axis=1)\n","y_train = train_data[\"pep\"]\n","X_test = test_data.drop(\"pep\", axis=1)\n","\n","# Chuyển đổi các cột dữ liệu dạng văn bản sang dạng số hóa\n","X_train = pd.get_dummies(X_train)\n","X_test = pd.get_dummies(X_test)\n","\n","# Khởi tạo mô hình KNN với k=5 và huấn luyện trên toàn bộ dữ liệu huấn luyện\n","knn_model = KNeighborsClassifier(n_neighbors=5)\n","knn_model.fit(X_train, y_train)\n","print(y_test)\n","# Dự đoán nhãn cho tập dữ liệu mới (TestData)\n","y_pred = knn_model.predict(X_test)\n","\n","# In kết quả dự đoán\n","print(\"KNN Classification Results on New Data:\")\n","print(y_pred)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UwM-gRRLPjQX","executionInfo":{"status":"ok","timestamp":1703042549037,"user_tz":-420,"elapsed":325,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"d7e67e3e-f776-42dc-8660-b0d0b3da12da"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["571     NO\n","383    YES\n","314     NO\n","458     NO\n","295     NO\n","343     NO\n","124    YES\n","172     NO\n","28      NO\n","376    YES\n","87      NO\n","387    YES\n","30      NO\n","346     NO\n","84     YES\n","126     NO\n","305     NO\n","184     NO\n","226    YES\n","272     NO\n","169     NO\n","517    YES\n","342     NO\n","494     NO\n","90     YES\n","61     YES\n","278     NO\n","40     YES\n","320    YES\n","445     NO\n","448    YES\n","251    YES\n","596     NO\n","53     YES\n","492    YES\n","149     NO\n","547     NO\n","135    YES\n","476    YES\n","598     NO\n","469     NO\n","340     NO\n","94      NO\n","323    YES\n","430     NO\n","391    YES\n","389     NO\n","253    YES\n","152    YES\n","220     NO\n","82      NO\n","277    YES\n","345    YES\n","99      NO\n","537    YES\n","243     NO\n","510     NO\n","27     YES\n","536    YES\n","335    YES\n","Name: pep, dtype: object\n","KNN Classification Results on New Data:\n","['YES' 'NO' 'YES' 'NO' 'NO' 'NO' 'YES' 'YES' 'NO' 'YES' 'NO' 'YES' 'YES'\n"," 'YES' 'NO' 'NO' 'NO' 'NO' 'YES' 'YES' 'YES' 'YES' 'YES' 'NO' 'YES' 'YES'\n"," 'NO' 'NO' 'NO' 'YES' 'NO' 'YES' 'NO' 'NO' 'NO' 'YES' 'NO' 'YES' 'NO' 'NO'\n"," 'YES' 'NO' 'NO' 'NO' 'NO' 'NO' 'NO' 'NO' 'YES' 'NO' 'NO' 'YES' 'NO' 'NO'\n"," 'YES' 'NO' 'YES' 'NO' 'NO' 'YES']\n"]}]},{"cell_type":"code","source":["# d) Sử dụng Naive-Bayes để phân loại\n","# Khởi tạo mô hình Naive-Bayes\n","nb_model = GaussianNB()\n","nb_model.fit(X_train, y_train)\n","\n","# Dự đoán nhãn cho tập kiểm tra\n","y_pred_nb = nb_model.predict(X_test)\n","\n","# Đánh giá mô hình Naive-Bayes trên tập kiểm tra\n","print(\"Naive-Bayes Model Evaluation on Test Data:\")\n","print(confusion_matrix(y_test, y_pred_nb))\n","print(classification_report(y_test, y_pred_nb))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fZjI9cFUP8eA","executionInfo":{"status":"ok","timestamp":1703042611929,"user_tz":-420,"elapsed":3,"user":{"displayName":"Thư Diệp Anh","userId":"18397154397506270286"}},"outputId":"a2c721b1-734f-446b-c741-6f86d7df05b9"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Naive-Bayes Model Evaluation on Test Data:\n","[[23 10]\n"," [14 13]]\n","              precision    recall  f1-score   support\n","\n","          NO       0.62      0.70      0.66        33\n","         YES       0.57      0.48      0.52        27\n","\n","    accuracy                           0.60        60\n","   macro avg       0.59      0.59      0.59        60\n","weighted avg       0.60      0.60      0.60        60\n","\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"mnm7iFZeYDxH"},"execution_count":null,"outputs":[]}]}